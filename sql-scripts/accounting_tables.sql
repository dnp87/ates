CREATE TABLE ROLES (
  ID INTEGER NOT NULL PRIMARY KEY,
  NAME VARCHAR2(255) NOT NULL UNIQUE
);

CREATE TABLE PARROTS(
  ID INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,  
  PUBLIC_ID VARCHAR2(40) NOT NULL UNIQUE,
  EMAIL VARCHAR2(2000) NOT NULL UNIQUE,
  NAME VARCHAR2(255) NOT NULL UNIQUE,
  ROLE_ID INTEGER NOT NULL REFERENCES ROLES(ID)
);

CREATE TABLE TASKS(
  ID INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  -- questionable, we don't want tasks to be modified in any other service
  PUBLIC_ID VARCHAR2(40) NOT NULL UNIQUE,
  NAME VARCHAR2(255) NOT NULL,
  JIRA_ID VARCHAR2(255),
  DESCRIPTION CLOB,
  -- STATUS: 1 - active, 2 - completed; TODO: create separate status table
  STATUS_ID INTEGER DEFAULT 1 NOT NULL,
  PARROT_ID INTEGER NOT NULL REFERENCES PARROTS(ID),
  DATE_COMPLETED TIMESTAMP,
  ASSIGNED_AMOUNT INTEGER NOT NULL,  -- in a real system this would be a decimal
  COMPLETED_AMOUNT INTEGER NOT NULL,  -- in a real system this would be a decimal
  CONSTRAINT STATUS_VALUE_CHECK CHECK(STATUS_ID IN (1, 2)) 
);

CREATE TABLE ACCOUNTS(
  ID INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,  
  PUBLIC_ID VARCHAR2(40) NOT NULL UNIQUE,
  PARROT_ID INTEGER NOT NULL REFERENCES PARROTS(ID) UNIQUE,
  AMOUNT INTEGER DEFAULT(0) NOT NULL -- in a real system this would be a decimal
);

CREATE TABLE ACCOUNT_LOGS(
  ID INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,  
  PUBLIC_ID VARCHAR2(40) NOT NULL UNIQUE,
  ACCOUNT_ID INTEGER NOT NULL REFERENCES ACCOUNTS(ID),
  TASK_ID INTEGER REFERENCES TASKS(ID),
  AMOUNT INTEGER DEFAULT(0) NOT NULL,  -- in a real system this would be a decimal
  CREATED TIMESTAMP NOT NULL
);