Не очень умею в диаграммы, пока всё так:
Сервисы:
AuthService: собственно, аутентификации, нужна всем. PopugService: получение и сохранение данных по отдельным попугам TaskService: получение и сохранение информации по отдельным задачам

AccountService: хранение баланса попугов
TransactionService: инфа по отдельным проводкам
TaskScheduler: планировщик на Quartz.NET, который пересчитывает транзакции.

Сущности:
Popug (id, name, email)
Task (id, title, description)
Transaction (id, amount, account_id, task_id)
Account (id, popug_id, amount)

(для простоты аутентификация не указана)

Сценарии: создание таска

Получаем случайного попуга в нужных ролях от PopugService
Сохраняем таск в TaskService
Сохраняем на попуга отрицательное начисление через TransactionService
Сценарий: закрывание таска

Сохраняем таск в TaskService
Сохраняем положительное начисление через TransactionService
Сценарий: зассайнить задачи

Получаем список попугов в нужных ролях от PopugService
Получаем список незакрытых тасков от TaskService
Создаём по ним отрицательные начисления ч/з асинхронный вызов TransactionService для предыдущих владельцев
Разбрасываем их по Round robin через асинхронный вызов TaskService
Cценарий: аккаунтинг для отдельных попугов

Получам текущий Account с балансом запро
сом к AccountService
Получаем начисления запросом к TransactionService с указанием account'а (асинхронно)
Получаем по этим Transaction'ам связанные с ними таски (асинхронно) Выводим вот это всё...
Аналитику пока не расписывал